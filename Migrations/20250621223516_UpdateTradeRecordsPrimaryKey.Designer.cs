// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using crypto_bot_api.Data;

#nullable disable

namespace crypto_bot_api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250621223516_UpdateTradeRecordsPrimaryKey")]
    partial class UpdateTradeRecordsPrimaryKey
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("crypto_bot_api.Data.TradeRecords", b =>
                {
                    b.Property<Guid>("position_uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("position_uuid");

                    b.Property<decimal?>("acquired_price")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("acquired_price");

                    b.Property<decimal?>("acquired_quantity")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("acquired_quantity");

                    b.Property<string>("asset_pair")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("asset_pair");

                    b.Property<bool>("is_position_closed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_position_closed");

                    b.Property<DateTime>("last_updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_updated");

                    b.Property<decimal?>("leftover_quantity")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("leftover_quantity");

                    b.Property<decimal?>("percentage_return")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("percentage_return");

                    b.Property<decimal?>("profit_loss")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("profit_loss");

                    b.Property<decimal?>("total_commissions")
                        .HasPrecision(18, 8)
                        .HasColumnType("numeric(18,8)")
                        .HasColumnName("total_commissions");

                    b.HasKey("position_uuid");

                    b.HasIndex("asset_pair", "is_position_closed", "leftover_quantity")
                        .HasFilter("leftover_quantity > 0");

                    b.ToTable("TradeRecords", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
